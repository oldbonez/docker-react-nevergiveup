name: smoketest pipe


env:
  DOCKER_TST: oldbonedocker/react-tst
  DOCKER_PRD: oldbonedocker/ebsprd

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
 
jobs:
  git-leaks:
    name: secrets detection
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install depencies for test coverage
        run: |
        yarn add @babel/preset-react @babel/plugin-syntax-jsx --dev
        yarn
      - name: App test and coverage
        run: yarn jest --coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: docker_container_build_vulnscan
    needs: [git-leaks]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: >-
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - run: docker build -t $DOCKER_TST -f Dockerfile.dev .
      - run: docker run -e CI=true $DOCKER_TST npm test
      - run: docker build -t $DOCKER_PRD .
      - run: |
             docker push $DOCKER_TST
             docker push $DOCKER_PRD


      - name: tstsast
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "docker.io/oldbonedocker/react-tst"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL"

      - name: prdsasttst
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "docker.io/oldbonedocker/ebsprd"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL"
  deploy-ebscli:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.2
      - name: Install EB CLI using pip
        run: |
          python -m pip install --upgrade pip
          pip install awsebcli
      - name: Init EB CLI
        run: |
           eb init ${{ secrets.EBS_DEPLOYMENT_ENV }}_$(date '+%Y%m%d')_${GITHUB_SHA:0:8} -p ${{ secrets.AWS_PLATFORM }} --region ${{ secrets.AWS_DEFAULT_REGION }}
           eb create ${{ secrets.EBS_DEPLOYMENT_ENV }}_$(date '+%Y%m%d')_${GITHUB_SHA:0:8}
      - name: Deploy to Elastic Beanstalk
        run: |
          eb deploy ${{ secrets.EBS_DEPLOYMENT_ENV }}_$(date '+%Y%m%d')_${GITHUB_SHA:0:8} -l ${{ secrets.EBS_DEPLOYMENT_ENV }}-${GITHUB_SHA:0:8}

#  deploy-githubactions:
#    needs: [git-leaks, sonarcloud,build]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Generate deployment package
#        run: zip -r deploy.zip . -x '*.git*'
#
#      - name: Deploy to EB
#        uses: einaregilsson/beanstalk-deploy@v18
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
#          application_name: docker
#          environment_name: ${{ secrets.EBS_DEPLOYMENT_ENV }}
#          existing_bucket_name: elasticbeanstalk-eu-central-1-934544062828
#          region: ${{ secrets.AWS_DEFAULT_REGION }}
#          version_label: ${{ github.sha }}
#          deployment_package: deploy.zip
#          use_existing_version_if_available: true
